# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

default_border normal 2
default_floating_border normal 2
font "pango:Iosevka,monospace 10"

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term wezterm
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run --no-exec | xargs swaymsg exec --

output * adaptive_sync on

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg #000000 solid_color
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w \
        timeout 300 'lock' \
        timeout 600 'wlopm --off \*' \
        resume 'wlopm --on \*' \
        before-sleep 'lock'
exec dunst
exec arbtt_wayland_toplevel.py
#exec sway_workspace_ctl.py
exec fix_gnome.sh
#exec kanshi
exec waybar
#exec nm-applet
exec local_sway_init.sh
#exec wl-paste -t text --watch clipman store
#exec_always kanshictl reload

input "type:keyboard" {
    xkb_layout custom
    xkb_options compose:caps
}

#input "SYNA7DAB:00 06CB:CDF0 Touchpad" {
input * {
    dwt disabled
}

for_window [app_id="pavucontrol"] floating enable
for_window [app_id="firefox" title="Extension"] floating enable

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term start --class term-floating
    for_window [app_id="term-floating"] floating enable
    bindsym $mod+Backspace exec firefox --new-window about:blank
    bindsym $mod+Shift+Backspace exec firefox --private-window about:blank
    bindsym $mod+Slash exec maghammer.sh
    bindsym $mod+u exec $term start --class term-floating units
    bindsym $mod+p exec $term start --class term-floating python
    bindsym $mod+m exec pavucontrol
    bindsym $mod+Ctrl+Return exec $term connect --class term-floating protagonism
    bindsym $mod+Shift+Ctrl+Return exec $term connect --class term protagonism
    bindsym $mod+Shift+Return exec $term start --class term
    bindsym $mod+i exec $term connect --class term-floating unix
    bindsym $mod+Shift+i exec $term connect --class term unix
    bindsym $mod+g exec $term start --class term-floating gpt4term.sh
    bindsym Ctrl+space exec dunstctl close
    bindsym Print exec take-screenshot-window
    bindsym Ctrl+Print exec take-screenshot
    bindsym Ctrl+l exec lock
    bindsym XF86MonBrightnessUp exec light -A 10
    bindsym XF86MonBrightnessDown exec light -U 10
    bindsym XF86AudioPlay exec mpris_smart_toggle.py
    bindsym $mod+F7 exec mpris_smart_toggle.py
    bindsym $mod+Tab exec rofi -show window

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym --whole-window BTN_BACK workspace next
    bindsym --whole-window BTN_TASK workspace prev
    bindgesture swipe:left workspace prev
    bindgesture swipe:right workspace next
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 100px
    bindsym $down resize grow height 100px
    bindsym $up resize shrink height 100px
    bindsym $right resize grow width 100px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 100px
    bindsym Down resize grow height 100px
    bindsym Up resize shrink height 100px
    bindsym Right resize grow width 100px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
#bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top#

#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %H:%M:%S'; do sleep 1; done

#    colors {
        #statusline #ffffff
#        background #323232
        #inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

include /etc/sway/config.d/*
